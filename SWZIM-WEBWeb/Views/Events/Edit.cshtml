@model SWZIM_WEBWeb.Events

@{
    ViewBag.Title = "Edit";
}

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp">
</script>
<script type="text/javascript">
    var rozmiar = new google.maps.Size(32, 32);
    var punkt_startowy = new google.maps.Point(0, 0);
    var punkt_zaczepienia = new google.maps.Point(16, 16);
    var dymek = new google.maps.InfoWindow();
    var map;
    var marker;
    function initialize() {
        var mapOptions = {
            center: { lat: @Model.Latitude, lng: @Model.Longitude },
            zoom: 16
        };
        map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);
        addMarker();
    }
    google.maps.event.addDomListener(window, 'load', initialize);

    function addMarker() {
        var iconUrl = '@Model.EventTypes.MarkerIcons.Url';
        var ico = new google.maps.MarkerImage(iconUrl, rozmiar, punkt_startowy, punkt_zaczepienia);
        marker = new google.maps.Marker({ map: map, position: new google.maps.LatLng(@Model.Latitude, @Model.Longitude), icon: ico, title: '@Model.Name', text: '@Model.Description', draggable: true });
        //obsluga zdarzenia przesuniecia markera
        google.maps.event.addListener(marker, "dragend", function (event) {
            //zapis wspolrzednych do pol tekstowych
            document.getElementById("Latitude").value = this.getPosition().lat();
            document.getElementById("Longitude").value = this.getPosition().lng();
        });
    }
    function update(){
        var lat = parseFloat(document.getElementById("Latitude").value);
        var lng = parseFloat(document.getElementById("Longitude").value);
        var position = new google.maps.LatLng(lat, lng);
        marker.setPosition(position);
        marker.setMap(map);
        map.setCenter(position);
    }
</script>
<section id="main-content">
    <section class="wrapper">

        <div class="row">
            <div class="col-lg-12">
                <!--breadcrumbs start -->
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index", "Home")"><i class="icon_house_alt"></i> Home</a></li>
                    <li class="active"> Edycja wydarzenia</li>
                </ul>
                <!--breadcrumbs end -->
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <section class="panel">
                    <header class="panel-heading">
                        Edycja wydarzenia
                    </header>
                    <div class="panel-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal" style="float: left; padding-left: 20px; padding-right: 30px; min-width: 45%;">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.AddedBy, "AddedBy", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("AddedBy", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AddedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventTypeId, "EventTypeId", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("EventTypeId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.EventTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                
                            </div>
                            <div style="float:left; height: 400px; width: 50%; min-width: 400px; padding-left: 20px; padding-top: 15px">
                                <div id="map-canvas" style="height: 100%; width: 100%"></div>
                            </div>
                            <p style="clear:both; padding-top: 15px">
                                <input type="submit" value="Zapisz" class="btn btn-info  btn-sm" />
                                @Html.ActionLink("Przejdź do listy zdarzeń", "Index", null, new { Class = "btn btn-info  btn-sm" })
                            </p>
                            }

                    </div>
                </section>

            </div>
        </div>
    </section>
</section>
