@using WpieSerwisInz.Logic.Helpers
@using WpieSerwisInz.Models.BO.CADXml.CadWrapper
@model WpieSerwisInz.Models.BO.Wrapper.JunctionXmlWrapper

@{
    ViewBag.Title = "Edit Junction Model";
    int i = 0;
}

<h2>Edit Junction Model</h2>

<style>
    table {
        border-spacing: 11px;
        border-collapse: separate;
        text-align: center;
    }

    th {
        text-align: center;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        var znaki = @Util.SerializeJsonObject(Model.ListaZnakow);
        var odcinki = @Util.SerializeJsonObject(Model.ListaOdcinkow);
        var sygnal = @Util.SerializeJsonObject(Model.ListaSygnal);
        loadMapXml('@Model.Xml.Junctiom.Lat', '@Model.Xml.Junctiom.Long', '@Model.Xml.Junctiom.Name', '@Model.Xml.Junctiom.Information',znaki,odcinki,sygnal,true);
    });
</script>

<div>
    <div class="col-md-7">
        @using (Html.BeginForm("Edit", "JunctionXml", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" id="ModelSide">
                <hr />
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Xml.Id)
                @Html.HiddenFor(model => model.Xml.LastModificationDate)
                @Html.HiddenFor(model => model.Xml.CreationDate)
                <div class="table-responsive">
                    <table>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.Xml.SerializedXmlModel, new { @class = "control-label col-md-2" })

                            </td>
                            <td>
                                <input type="file" name="FileUpload" />

                            </td>
                            <td>
                                <input name="submit" type="submit" value="Upload" class="btn btn-default" />
                            </td>
                        </tr>


                        <tr>
                            <td>
                                @Html.LabelFor(model => model.Xml.AdditionalInformation, new { @class = "control-label col-md-2" })
                            </td>
                            <td>
                                @Html.TextAreaFor(model => model.Xml.AdditionalInformation)
                                @Html.ValidationMessageFor(model => model.Xml.AdditionalInformation)
                            </td>
                        </tr>
                    </table>
                    <br />
                    <br />
                    <table style="text-align:center">
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Length 1
                            </th>
                            <th>
                                Long 1
                            </th>
                            <th>
                                Length 2
                            </th>
                            <th>
                                Long 2
                            </th>
                            <th>
                                Start
                            </th>
                            <th>
                                End
                            </th>
                        </tr>
                        @for (var znakIndex = 0; znakIndex < Model.ListaZnakow.Count; znakIndex++)
                        {
                            <input type="hidden" id="rz @i t" value="Znak | @Model.ListaZnakow[znakIndex].Id">

                            <tr>
                                @Html.HiddenFor(model => model.ListaZnakow[znakIndex].Id)
                                @Html.HiddenFor(model => model.ListaZnakow[znakIndex].Nazwa)
                                @Html.HiddenFor(model => model.ListaZnakow[znakIndex].Signcode)
                                <td>
                                    @Model.ListaZnakow[znakIndex].Id
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaZnakow[znakIndex].Lat, new { id = "rz " + i + "lat", style = "width:80px;" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaZnakow[znakIndex].Long, new { id = "rz " + i + "long", style = "width:80px;" })
                                </td>
                                <td></td>
                                <td></td>
                                <td>
                                    <input type="radio" id="rz@i" name="group1" value="rz @i">
                                </td>


                            </tr>
                            i++;
                        }


                        @for (var sygnIndex = 0; sygnIndex < Model.ListaSygnal.Count; sygnIndex++)
                        {
                            <input type="hidden" id="rz @i t" value="SYGN | @Model.ListaSygnal[sygnIndex].Id">

                            <tr>
                                @Html.HiddenFor(model => model.ListaSygnal[sygnIndex].Id)
                                @Html.HiddenFor(model => model.ListaSygnal[sygnIndex].Nazwa)
                                @Html.HiddenFor(model => model.ListaSygnal[sygnIndex].Signcode)
                                <td>
                                    @Model.ListaSygnal[sygnIndex].Id
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaSygnal[sygnIndex].Lat, new { id = "rz " + i + "lat", style = "width:80px;" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaSygnal[sygnIndex].Long, new { id = "rz " + i + "long", style = "width:80px;" })
                                </td>
                                <td></td>
                                <td></td>
                                <td>
                                    <input type="radio" id="rz@i" name="group1" value="rz @i">
                                </td>


                            </tr>
                            i++;
                        }

                        @for (var odcIndex = 0; odcIndex < Model.ListaOdcinkow.Count; odcIndex++)
                        {
                            <input type="hidden" id="re @i t" value="ODC | @Model.ListaOdcinkow[odcIndex].Id EN">
                            <input type="hidden" id="rs @i t" value="ODC | @Model.ListaOdcinkow[odcIndex].Id ST">
                            <tr>

                                @Html.HiddenFor(model => model.ListaOdcinkow[odcIndex].Id)
                                @Html.HiddenFor(model => model.ListaOdcinkow[odcIndex].Signcode)
                                <td>

                                    @Model.ListaOdcinkow[odcIndex].Signcode @Model.ListaOdcinkow[odcIndex].Id
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaOdcinkow[odcIndex].LatStart, new { id = "rs " + i + "lat", style = "width:80px;", @readonly = true })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaOdcinkow[odcIndex].LongStart, new { id = "rs " + i + "long", style = "width:80px;", @readonly = true })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaOdcinkow[odcIndex].LatEnd, new { id = "re " + i + "lat", style = "width:80px;", @readonly = true })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => Model.ListaOdcinkow[odcIndex].LongEnd, new { id = "re " + i + "long", style = "width:80px;", @readonly = true })
                                </td>
                                <td>
                                    <input type="radio" id="rs@i" name="group1" value="rs @i">
                                </td>
                                <td>
                                    <input type="radio" id="re@i" name="group1" value="re @i">
                                </td>

                            </tr>
                            i++;
                        }
                    </table>
                </div>
                <br />
                <br />
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-10">
                        @Html.ActionLink("Back", "Details", new { id = Model.Xml.Id, @class = "btn btn-default" })
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-5 col-sm-12">
        <div id="map-canvas" style="width: 100%; height: 480px;"></div>
    </div>
</div>

<div>

</div>
